<#@ template language="C#" debug="True" #>
<#@ output extension="cs" encoding="utf-8" #>
<#@ include file="T4Toolbox.tt" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ assembly name="$(TargetDir)\Magicodes.CMS.dll" #>
<#@ include file="$(SolutionDir)\T4\Magicodes.T4\Templates\T4Helper.tt" #>
<#@ import namespace="Magicodes.CMS.ViewModels" #>
<#@ import namespace="System.Reflection" #>
<#@ CleanupBehavior processor="T4VSHost" CleanupAfterProcessingtemplate="true" #>
<#
    var binDirPath=this.Host.ResolveAssemblyReference("$(TargetDir)");
    var dir=new DirectoryInfo(binDirPath);
    var dlls=  dir.GetFiles("*.dll");
    foreach(FileInfo dllFile in dlls)
    {
        AppDomain.CurrentDomain.Load(AssemblyName.GetAssemblyName(dllFile.FullName));
    }
    var assembly=typeof(ContentViewModel).Assembly;
    var types=assembly.GetTypesWith<T4ODataGridAttribute>(true);
    var actions=new List<string>();
    foreach (Type t in types)
    {
        var t4ODataGridAttribute= t.GetAttribute<T4ODataGridAttribute>(false);
        var actionName=t.Name;
        if(t4ODataGridAttribute.ActionName!=null)actionName=t4ODataGridAttribute.ActionName;
        actions.Add(actionName);
    }
 #>
using Magicodes.Core.Web.Controllers;
using Magicodes.CMS.ViewModels;
using Microsoft.AspNet.Identity;
using Microsoft.AspNet.Identity.Owin;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using System.Web;
using System.Web.Mvc;

namespace Magicodes.CMS.Areas.CMSAdmin.Controllers
{
    public class ODataGridController : AdminControllerBase
    {
<#    foreach(string actionName in actions){ #>
        // GET: ODataGrid/<#=            actionName #>
        public ActionResult <#=            actionName #>()
        {
            return View();
        }
<#    } #>
    }
}
